df_phylum <- MergeDF %>%
group_by(phylum) %>%
summarise(SpeciesWithBOLD = sum(BOLD_Records > 0),
SpeciesWithoutBOLD = sum(BOLD_Records == 0),
SpeciesWithCOI = sum(BOLD_Records_COI > 0))
df_class <- MergeDF %>%
group_by(class) %>%
summarise(SpeciesWithBOLD = sum(BOLD_Records > 0),
SpeciesWithoutBOLD = sum(BOLD_Records == 0),
SpeciesWithCOI = sum(BOLD_Records_COI > 0))
df_phylum <- MergeDF %>%
group_by(phylum) %>%
summarise(SpeciesWithBOLD = sum(BOLD_Records > 0),
SpeciesWithoutBOLD = sum(BOLD_Records == 0),
SpeciesWithCOI = sum(BOLD_Records_COI > 0))
df_class <- MergeDF %>%
group_by(class) %>%
summarise(SpeciesWithBOLD = sum(BOLD_Records > 0),
SpeciesWithoutBOLD = sum(BOLD_Records == 0),
SpeciesWithCOI = sum(BOLD_Records_COI > 0))
df_both <- MergeDF %>%
group_by(phylum, class) %>%
summarise(SpeciesWithBOLD = sum(BOLD_Records > 0),
SpeciesWithoutBOLD = sum(BOLD_Records == 0),
SpeciesWithCOI = sum(BOLD_Records_COI > 0))
View(df_both)
write_clip(df_both)
write.csv(MergeDF, "Final_Species_List.csv")
knitr::opts_chunk$set(echo = TRUE)
library(taxize)
library(magrittr)
library(dplyr)
library(tidyverse)
library(bold)    # API interface to BOLD
library(seqinr)  # for FASTA output
library(rentrez)
library(readxl)
library(usethis)
library(stringr)
library(Hmisc)
library(clipr)
library(rotl)
library(knitr)
Arthro_Gap_analysis <- read_csv("Arthro_Gap_analysis2.csv")
View(Arthro_Gap_analysis)
library(readr)
Final_Species_List <- read_csv("Final_Species_List.csv")
View(Final_Species_List)
knitr::opts_chunk$set(echo = TRUE)
MergeDF <- read_csv("Final_Species_List.csv")
df_both <- MergeDF %>%
group_by(phylum, class) %>%
summarise(SpeciesWithBOLD = sum(BOLD_Records > 0),
SpeciesWithoutBOLD = sum(BOLD_Records == 0),
SpeciesWithCOI = sum(BOLD_Records_COI > 0))
View(df_both)
CollembolaDF <- Arthro_Gap_analysis %>%
filter(class == "Collembola")
View(CollembolaDF)
View(df_both)
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda")
View(ClassDF)
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda") %>%
group_by(class, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0))
View(ClassDF)
IsopodaTest <- Arthro_Gap_analysis %>%
filter(order == "Isopoda")
View(IsopodaTest)
IsopodaTest <- Arthro_Gap_analysis %>%
filter(order == "Isopoda") %>%
mutate(FamilyName == family)
IsopodaTest <- Arthro_Gap_analysis %>%
filter(order == "Isopoda") %>%
mutate(FamilyName = family)
IsopodaTest <- Arthro_Gap_analysis %>%
filter(order == "Isopoda") %>%
mutate(FamilyName = family) %>%
relocate(FamilyName, .after = tax_rank)
IsopodaTest <- IsopodaTest %>%
group_by(FamilyName)
IsopodaTest <- IsopodaTest %>%
group_by(FamilyName) %>%
summarise(across(c(BOLD_Records:BOLD_Records_COI_SW), sum))
IsopodaTest2 <- Arthro_Gap_analysis %>%
filter(order == "Isopoda") %>%
mutate(FamilyName = family) %>%
relocate(FamilyName, .after = tax_rank)
View(IsopodaTest2)
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta")
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0))
View(InsectDF)
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank == "family")
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0))
InsectDF2 <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank == "family")
View(InsectDF2)
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0))
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda") %>%
filter(class != "Insecta")
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda") %>%
filter(class != "Insecta") %>%
group_by(class, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0))
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda") %>%
filter(class != "Insecta") %>%
group_by(class, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank != "genus" | tax_rank != "species")
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda") %>%
filter(class != "Insecta") %>%
group_by(class, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank != "genus" & tax_rank != "species")
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank != "genus" & tax_rank != "species")
write_clip(ClassDF)
write_clip(InsectDF)
AntsDF <- Arthro_Gap_analysis %>%
filter(order == "Hymenoptera")
View(AntsDF)
Antlst <- AntsDF$FinalID
Antlst <- as.character(as.list(AntsDF$FinalID))
tax_ant <- tax_rank(Antlst, db ="gbif")
knitr::opts_chunk$set(echo = TRUE)
detach("package:rotl", unload = T)
tax_ant <- tax_rank(Antlst, db ="gbif")
tax_ant <- tax_rank(Antlst, db ="gbif")
tax_ant <- tax_rank(Antlst, db ="gbif", rows = 1)
tax_ant <- as.data.frame(do.call(rbind, tax_ant))
tax_ant <- rownames_to_column(tax_ant, "FinalID")
tax_ant <- tax_ant %>%
rename("tax_rank" = V1)
View(tax_ant)
Ant_upstream <- rbind(classification(Antlst, db = 'gbif', rows = 1))
View(Ant_upstream)
Ant_final <- Ant_upstream %>%
select( query,rank,name) %>%
pivot_wider(names_from = rank,
values_from = name) %>%
rename("FinalID" = query)
View(Ant_final)
downstream("Apis", db = 'ncbi', downto = 'species')
test <- upstream(Antlst, db = 'itis', upto = 'family', rows = 1)
test <- upstream(Antlst, db = 'gbif', upto = 'family', rows = 1)
Arthro_taxa<- read_excel("Arthro_molecular analysis taxa_08182023.xlsx")
Arthro_taxa <- Arthro_taxa %>%
filter(Group == "Ants")
View(Arthro_taxa)
######### Check for spelling, synonyms, and accepted names using Global Names Resolver and TOL resolver
# lst<-unique(as.list(taxa_table$species_name))
lst<-unique(as.list(Arthro_taxa$Taxon))
lst<- str_squish(lst)
taxa_table_gnr <-gnr_resolve(sci = as.character(lst), data_source_ids = c(11), with_canonical_ranks=T)
Missing_GNR <- setdiff(Arthro_taxa$Taxon, taxa_table_gnr$user_supplied_name)
taxa_taxa <- Arthro_taxa %>%
filter(Group == "Ants")
######### Check for spelling, synonyms, and accepted names using Global Names Resolver and TOL resolver
# lst<-unique(as.list(taxa_table$species_name))
lst<-unique(as.list(taxa_table$FinalID))
lst<- str_squish(lst)
taxa_table_gnr <-gnr_resolve(sci = as.character(lst), best_match_only = T, with_canonical_ranks=T)
Missing_GNR <- setdiff(taxa_table$FinalID, taxa_table_gnr$user_supplied_name)
taxa_table <- Arthro_taxa %>%
filter(Group == "Ants")
######### Check for spelling, synonyms, and accepted names using Global Names Resolver and TOL resolver
# lst<-unique(as.list(taxa_table$species_name))
lst<-unique(as.list(taxa_table$FinalID))
lst<- str_squish(lst)
######### Check for spelling, synonyms, and accepted names using Global Names Resolver and TOL resolver
# lst<-unique(as.list(taxa_table$species_name))
lst<-unique(as.list(taxa_table$Taxon))
lst<- str_squish(lst)
taxa_table_gnr <-gnr_resolve(sci = as.character(lst), best_match_only = T, with_canonical_ranks=T)
Missing_GNR <- setdiff(taxa_table$FinalID, taxa_table_gnr$user_supplied_name)
View(taxa_table_gnr)
Success_GNR <- taxa_table_gnr %>%
filter(score > .5)
Success_TOL <- tol_resolve(unique(Success_GNR$matched_name2), context_name = "All life")
Missing_TOL <- tol_resolve(Missing_GNR, context_name = "All life")
View(Success_TOL)
taxa_table_tol1 <- bind_rows(Success_TOL, Missing_TOL)
# taxa_table_tol1 <- bind_rows(Success_TOL, Missing_TOL)
taxa_table_tol1 <- bind_rows(Success_TOL)
taxa_table_tol2 <- taxa_table_tol1 %>%
filter(str_detect(unique_name, "genus")) %>%
filter(str_detect(unique_name, "domain")) %>%
filter(str_detect(unique_name, "infraorder")) %>%
filter(str_detect(unique_name, "class")) %>%
mutate(unique_name = word(unique_name, 1))
taxa_table_tol <- taxa_table_tol1 %>%
filter(!str_detect(unique_name, "genus")) %>%
filter(!str_detect(unique_name, "domain")) %>%
filter(!str_detect(unique_name, "infraorder")) %>%
filter(!str_detect(unique_name, "class")) %>%
rbind(taxa_table_tol2)
View(taxa_table_tol1)
View(taxa_table_tol)
# taxa_table_tol1 <- bind_rows(Success_TOL, Missing_TOL)
taxa_table_tol1 <- bind_rows(Success_TOL)
taxa_table_tol2 <- taxa_table_tol1 %>%
filter(str_detect(unique_name, "genus")) %>%
filter(str_detect(unique_name, "domain")) %>%
filter(str_detect(unique_name, "infraorder")) %>%
filter(str_detect(unique_name, "class")) %>%
mutate(unique_name = word(unique_name, 1))
knitr::opts_chunk$set(echo = TRUE)
library(taxize)
library(magrittr)
library(dplyr)
library(tidyverse)
library(bold)    # API interface to BOLD
library(seqinr)  # for FASTA output
library(rentrez)
library(readxl)
library(usethis)
library(stringr)
library(Hmisc)
library(clipr)
library(knitr)
Arthro_Gap_analysis <- read_csv("Arthro_Gap_analysis2.csv")
ClassDF <- Arthro_Gap_analysis %>%
filter(order != "Amphipoda") %>%
filter(class != "Insecta") %>%
group_by(class, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank != "genus" & tax_rank != "species")
InsectDF <- Arthro_Gap_analysis %>%
filter(class == "Insecta") %>%
group_by(order, tax_rank) %>%
summarise(CA_Families = sum(BOLD_Records_CA > 0),
SW_Families = (sum(BOLD_Records_SW > 0) - sum(BOLD_Records_CA > 0)),
USA_Families = (sum(BOLD_Records_USA > 0) - sum(BOLD_Records_SW > 0)),
BOLD_Families = (sum(BOLD_Records > 0)- sum(BOLD_Records_USA > 0)),
Missing_Families = sum(BOLD_Records == 0)) %>%
filter(tax_rank != "genus" & tax_rank != "species")
StackedGraph <- read_excel("StackedGraph.xlsx")
View(StackedGraph)
StackedGraph <- StackedGraph %>%
-select(tax_rank)
StackedGraph <- StackedGraph %>%
select(-tax_rank)
View(StackedGraph)
StackedGraph <- StackedGraph %>%
mutate(Families = sum(CA_Families:Missing_Families))
StackedGraph <- StackedGraph %>%
mutate(Families == sum(CA_Families:Missing_Families))
StackedGraph <- read_excel("StackedGraph.xlsx")
StackedGraph <- StackedGraph %>%
select(-tax_rank)
StackedFamilies <- StackedGraph %>%
mutate(Families == sum(CA_Families:Missing_Families))
StackedFamilies <- StackedGraph %>%
mutate(Families = sum(CA_Families:Missing_Families))
View(StackedFamilies)
StackedFamilies <- StackedGraph %>%
summarise(Families = sum(CA_Families:Missing_Families))
StackedFamilies <- StackedGraph %>%
group_by(Taxa) %>%
summarise(Families = sum(CA_Families:Missing_Families))
StackedFamilies <- StackedGraph %>%
mutate(Families = rowSums(.[2:6]))
StackedGraph <- t(StackedFamilies)
View(StackedGraph)
colnames(StackedGraph) <- StackedGraph[1,]
StackedGraph <- StackedGraph[-1,]
StackedGraph <- as.data.frame(StackedGraph)
View(StackedGraph)
StackedGraph <- as.data.frame(StackedGraph) %>%
mutate_all(as.numeric())
StackedGraph <- as.data.frame(StackedGraph) %>%
mutate_all(StackedGraph, as.numeric())
StackedGraph <- sapply(StackedGraph, numeric)
StackedGraph <- apply(StackedGraph, numeric)
StackedGraph <- apply(StackedGraph, as.numeric())
StackedGraph <- as.data.frame(StackedGraph) %>%
mutate_all(StackedGraph, as.numeric)
StackedGraph <- as.data.frame(StackedGraph) %>%
mutate_all(as.numeric)
StackedGraph <- read_excel("StackedGraph.xlsx")
StackedGraph <- StackedGraph %>%
select(-tax_rank)
StackedFamilies <- StackedGraph %>%
mutate(Families = rowSums(.[2:6]))
p <- ggplot(data=StackedFamilies, aes(x = Taxa, y = Families))+
geom_bar(stat = "identity")
p
PivotFamilies <- StackedGraph %>%
pivot_longer(
cols = CA_Families:Missing_Families,
names_to = "type",
values_to = "families"
)
View(PivotFamilies)
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(stat = "identity")
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")+
scale_fill_viridis(discrete = T)
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")+
scale_fill_brewer()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")+
scale_fill_brewer() +
theme_dark()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")+
scale_fill_binned()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")+
scale_fill_viridis_d()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar(position = "stack", stat = "identity")+
scale_fill_viridis_d()+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_viridis_d()+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_color_fermenter()+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
display.brewer.all(colorblindFriendly = TRUE)
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_color_brewer(palette = "Set2" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, color = type))+
geom_bar( stat = "identity")+
scale_color_brewer(palette = "Set2" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_color_brewer(palette = "Set2" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_color_brewer(palette = "PiYG" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = "PiYG" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = "Set2" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = "Dark2" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 1 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 2 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 3 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 4 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 5 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 6 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = 7 )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = "GnBu" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_brewer(palette = "Dark2" )+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
library(ggsci)
p <- ggplot(PivotFamilies, aes(x = Taxa, y = families, fill = type))+
geom_bar( stat = "identity")+
scale_fill_jco()+
ggtitle("Family Level BOLD Results") +
theme_minimal()
p
